################################################################################
SHORT DESCRIPTION: 
################################################################################
XSA-162 (http://xenbits.xen.org/xsa/advisory-162.html)
heap buffer overflow vulnerability in pcnet emulator

################################################################################
LONG DESCRIPTION: 
################################################################################
Source: http://xenbits.xen.org/xsa/advisory-162.html
Patches: xsa162-qemuu-4.3.patch

The AMD PC-Net II emulator(hw/net/pcnet.c), while receiving packets in loopback
mode, appends CRC code to the receive buffer. If the data size given is same as
the buffer size(4096), the appended CRC code overwrites 4 bytes after the
s->buffer, making the adjacent 's->irq' object point to a new location.

################################################################################
CHANGELOG 
################################################################################
Added in OpenXT, Xen 4.3.4 patch-queue: Eric Chanudet <chanudete@ainfosec.com>

################################################################################
PATCHES 
################################################################################
Index: qemu-1.4.0/hw/pcnet.c
===================================================================
--- qemu-1.4.0.orig/hw/pcnet.c	2015-12-14 13:36:38.708012218 +0100
+++ qemu-1.4.0/hw/pcnet.c	2015-12-18 18:11:43.067263486 +0100
@@ -1103,7 +1103,7 @@
                 uint32_t fcs = ~0;
                 uint8_t *p = src;
 
-                while (p != &src[size-4])
+                while (p != &src[size])
                     CRC(fcs, *p++);
                 crc_err = (*(uint32_t *)p != htonl(fcs));
             }
@@ -1252,12 +1252,13 @@
         bcnt = 4096 - GET_FIELD(tmd.length, TMDL, BCNT);
 
         /* if multi-tmd packet outsizes s->buffer then skip it silently.
-           Note: this is not what real hw does */
-        if (s->xmit_pos + bcnt > sizeof(s->buffer)) {
-           s->xmit_pos = -1;
-           goto txdone;
+         * Note: this is not what real hw does.
+         * Last four bytes of s->buffer are used to store CRC FCS code.
+         */
+        if (s->xmit_pos + bcnt > sizeof(s->buffer) - 4) {
+            s->xmit_pos = -1;
+            goto txdone;
         }
-
         s->phys_mem_read(s->dma_opaque, PHYSADDR(s, tmd.tbadr),
                          s->buffer + s->xmit_pos, bcnt, CSR_BSWP(s));
         s->xmit_pos += bcnt;
