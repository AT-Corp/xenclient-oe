################################################################################
SHORT DESCRIPTION: 
################################################################################
XSA-185 (http://xenbits.xen.org/xsa/advisory-185.html)
Disallow L3 recursive pagetable for 32-bit PV guests.

################################################################################
LONG DESCRIPTION: 
################################################################################
Source: http://xenbits.xen.org/xsa/advisory-185.html
Patches: xsa185.patch

On real hardware, a 32-bit PAE guest must leave the USER and RW bit clear in L3
pagetable entries, but the pagetable walk behaves as if they were set.  (The L3
entries are cached in processor registers, and don't actually form part of the
pagewalk.)

When running a 32-bit PV guest on a 64-bit Xen, Xen must always OR in the USER
and RW bits for L3 updates for the guest to observe architectural behaviour.
This is unsafe in combination with recursive pagetables.

As there is no way to construct an L3 recursive pagetable in native 32-bit PAE
mode, disallow this option in 32-bit PV guests.

################################################################################
PATCHES 
################################################################################
Index: xen-4.6.1/xen/arch/x86/mm.c
===================================================================
--- xen-4.6.1.orig/xen/arch/x86/mm.c	2016-08-31 17:03:50.981169869 +0200
+++ xen-4.6.1/xen/arch/x86/mm.c	2016-08-31 17:03:53.351146744 +0200
@@ -1043,7 +1043,9 @@
 
     rc = get_page_and_type_from_pagenr(
         l3e_get_pfn(l3e), PGT_l2_page_table, d, partial, 1);
-    if ( unlikely(rc == -EINVAL) && get_l3_linear_pagetable(l3e, pfn, d) )
+    if ( unlikely(rc == -EINVAL) &&
+         !is_pv_32bit_domain(d) &&
+         get_l3_linear_pagetable(l3e, pfn, d) )
         rc = 0;
 
     return rc;
