################################################################################
SHORT DESCRIPTION: 
################################################################################
XSA-166 (http://xenbits.xen.org/xsa/advisory-168.html)
Prevent INVVPID failure due to non-canonical guest address.

################################################################################
LONG DESCRIPTION: 
################################################################################
Source: http://xenbits.xen.org/xsa/advisory-168.html
Patches: xsa168.patch

While INVLPG (and on SVM INVLPGA) don't fault on non-canonical addresses,
INVVPID fails (in the "individual address" case) when passed such an
address.

Since such intercepted INVLPG are effectively no-ops anyway, don't fix this in
vmx_invlpg_intercept(), but instead have paging_invlpg() never return true in
such a case.

################################################################################
PATCHES 
################################################################################
Index: xen-4.3.4/xen/include/asm-x86/paging.h
===================================================================
--- xen-4.3.4.orig/xen/include/asm-x86/paging.h	2015-03-19 16:08:36.000000000 +0100
+++ xen-4.3.4/xen/include/asm-x86/paging.h	2016-05-10 11:22:23.847508841 +0200
@@ -238,7 +238,7 @@
  * or 0 if it's safe not to do so. */
 static inline int paging_invlpg(struct vcpu *v, unsigned long va)
 {
-    return paging_get_hostmode(v)->invlpg(v, va);
+    return is_canonical_address(va) && paging_get_hostmode(v)->invlpg(v, va);
 }
 
 /* Translate a guest virtual address to the frame number that the
