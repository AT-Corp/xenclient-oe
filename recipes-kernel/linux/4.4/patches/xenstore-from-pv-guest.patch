################################################################################
SHORT DESCRIPTION: 
################################################################################
Allow Xenstore access through xenbus frontend without transaction.

################################################################################
LONG DESCRIPTION: 
################################################################################
Messages sent usually have tx_id == 0 for utilities like xenstore_client.
This used to be valid back in 4.4.16, but introduction of commit d1e6344e0
will look up for a transaction id for any message different than
XS_TRANSATION_START.
This tries to restore the previous behaviour while keeping d1e6344e0 fix.

The most visible symptom is PV-guests not being able to read Xenstore (dom0
uses Xenstored socket/socket_ro).

################################################################################
PATCHES 
################################################################################

Index: linux-4.4.17/drivers/xen/xenbus/xenbus_dev_frontend.c
===================================================================
--- linux-4.4.17.orig/drivers/xen/xenbus/xenbus_dev_frontend.c	2016-08-16 20:36:21.885656026 +0200
+++ linux-4.4.17/drivers/xen/xenbus/xenbus_dev_frontend.c	2016-08-16 21:06:41.128366244 +0200
@@ -316,7 +316,15 @@
 			rc = -ENOMEM;
 			goto out;
 		}
-	} else {
+	} else if (msg_type == XS_TRANSACTION_END || u->u.msg.tx_id != 0) {
+		/* Messages not using a transaction send tx_id == 0 which will
+		 * fail the following search (xenstore_client does that
+		 * notably).
+		 * Those used to be accepted prior d1e6344e0 (introduced since
+		 * 4.4.17).  docs/misc/xenstore.txt does not explicitely
+		 * documents it (e.g sending tx_id == 0 with msg_type ==
+		 * XS_READ) as being invalid, so restore it for now.
+		 */
 		list_for_each_entry(trans, &u->transactions, list)
 			if (trans->handle.id == u->u.msg.tx_id)
 				break;
